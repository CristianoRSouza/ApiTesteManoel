// <auto-generated />
using LojaManoelApi.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LojaManoelApi.Migrations
{
    [DbContext(typeof(AplicacaoContexto))]
    partial class AplicacaoContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LojaManoelApi.Data.Entities.Caixa", b =>
                {
                    b.Property<string>("CaixaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DimensoesId")
                        .HasColumnType("int");

                    b.Property<double>("VolumeDisponivel")
                        .HasColumnType("float");

                    b.HasKey("CaixaId");

                    b.HasIndex("DimensoesId");

                    b.ToTable("Caixas");
                });

            modelBuilder.Entity("LojaManoelApi.Data.Entities.Dimensao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Altura")
                        .HasColumnType("float");

                    b.Property<double>("Comprimento")
                        .HasColumnType("float");

                    b.Property<double>("Largura")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Dimensoes");
                });

            modelBuilder.Entity("LojaManoelApi.Data.Entities.Papel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PapelToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Papeis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PapelToken = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            PapelToken = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            PapelToken = "Client"
                        });
                });

            modelBuilder.Entity("LojaManoelApi.Data.Entities.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"));

                    b.HasKey("PedidoId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("LojaManoelApi.Data.Entities.Produto", b =>
                {
                    b.Property<string>("ProdutoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaixaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DimensaoId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId");

                    b.HasIndex("CaixaId");

                    b.HasIndex("DimensaoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("LojaManoelApi.Data.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PapelId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PapelId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LojaManoelApi.Data.Entities.Caixa", b =>
                {
                    b.HasOne("LojaManoelApi.Data.Entities.Dimensao", "Dimensoes")
                        .WithMany()
                        .HasForeignKey("DimensoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dimensoes");
                });

            modelBuilder.Entity("LojaManoelApi.Data.Entities.Produto", b =>
                {
                    b.HasOne("LojaManoelApi.Data.Entities.Caixa", null)
                        .WithMany("Produtos")
                        .HasForeignKey("CaixaId");

                    b.HasOne("LojaManoelApi.Data.Entities.Dimensao", "Dimensao")
                        .WithMany()
                        .HasForeignKey("DimensaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaManoelApi.Data.Entities.Pedido", "Pedido")
                        .WithMany("Produtos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dimensao");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("LojaManoelApi.Data.Entities.Usuario", b =>
                {
                    b.HasOne("LojaManoelApi.Data.Entities.Papel", "Papel")
                        .WithMany("Usuarios")
                        .HasForeignKey("PapelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Papel");
                });

            modelBuilder.Entity("LojaManoelApi.Data.Entities.Caixa", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("LojaManoelApi.Data.Entities.Papel", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("LojaManoelApi.Data.Entities.Pedido", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
